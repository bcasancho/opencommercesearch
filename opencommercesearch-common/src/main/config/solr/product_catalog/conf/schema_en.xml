<?xml version="1.0" encoding="UTF-8" ?>

<schema name="productCatalog" version="1.4">
  <types>
    <!-- A text field with defaults appropriate for English, plus
    aggressive word-splitting and autophrase features enabled.
    This field is just like text_en, except it adds
    WordDelimiterFilter to enable splitting and matching of
    words on case-change, alpha numeric boundaries, and
    non-alphanumeric chars.  This means certain compound word
    cases will work, for example query "wi fi" will match
    document "WiFi" or "wi-fi".  However, other cases will still
    not match, for example if the query is "wifi" and the
    document is "wi fi" or if the query is "wi-fi" and the
    document is "wifi".
    -->
    <fieldType name="text_en_splitting" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords_en.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.WordDelimiterFilterFactory"
                generateWordParts="1"
                generateNumberParts="1"
                catenateWords="1"
                catenateNumbers="1"
                catenateAll="0"
                splitOnCaseChange="0"
                splitOnNumerics="1"
                stemEnglishPossessive="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords_en.txt"/>
        <filter class="solr.PorterStemFilterFactory"/>
        <!-- attempt to expand synonyms after expansion -->
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms/index_synonyms.txt" ignoreCase="true" expand="true"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms/query_synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords_en.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.WordDelimiterFilterFactory"
                generateWordParts="1"
                generateNumberParts="1"
                catenateWords="0"
                catenateNumbers="0"
                catenateAll="0"
                splitOnCaseChange="0"
                splitOnNumerics="1"
                stemEnglishPossessive="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords_en.txt"/>
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
    </fieldType>

    <fieldType name="categoryName" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
      <analyzer type="index">
        <tokenizer class="solr.PatternTokenizerFactory" pattern="^[^\.]+\.[^\.]+$|^.+\.|\s" />
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords_en.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.WordDelimiterFilterFactory"
                generateWordParts="1"
                generateNumberParts="1"
                catenateWords="1"
                catenateNumbers="1"
                catenateAll="0"
                splitOnCaseChange="0"
                splitOnNumerics="0"
                stemEnglishPossessive="1" />
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords_en.txt"/>
        <filter class="solr.PorterStemFilterFactory"/>
        <!-- attempt to expand synonyms after expansion -->
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms/index_synonyms.txt" ignoreCase="true" expand="true"/>
     </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.PatternTokenizerFactory" pattern="^[^\.]+\.[^\.]+$|^.+\.|\s" />
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords_en.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.WordDelimiterFilterFactory"
                generateWordParts="1"
                generateNumberParts="1"
                catenateWords="0"
                catenateNumbers="0"
                catenateAll="0"
                splitOnCaseChange="0"
                splitOnNumerics="0"
                stemEnglishPossessive="1" />
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords_en.txt"/>
        <filter class="solr.PorterStemFilterFactory"/>
        <!-- attempt to expand synonyms after expansion -->
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms/index_synonyms.txt" ignoreCase="true" expand="true"/>
     </analyzer>
    </fieldType>
  </types>

  <xi:include href="xinclude/field_types.xml" parse="xml"
    xmlns:xi="http://www.w3.org/2001/XInclude">
  </xi:include>

  <xi:include href="xinclude/fields.xml" parse="xml"
    xmlns:xi="http://www.w3.org/2001/XInclude">
  </xi:include>

  <fields>
    <!-- catchall field, containing all other searchable text fields (implemented
      via copyField further on in this schema  -->
    <field name="text" type="text_en_splitting" indexed="true" stored="false" multiValued="true"/>
    <field name="keyword" type="text_en_splitting" indexed="true" stored="false" multiValued="false"/>
  </fields>

  <!-- Field to use to determine and enforce document uniqueness.
      Unless this field is marked with required="false", it will be a required field
   -->
  <uniqueKey>id</uniqueKey>

  <!-- field for the QueryParser to use when an explicit fieldname is absent -->
  <!--<defaultSearchField>text</defaultSearchField>-->

  <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
  <solrQueryParser defaultOperator="AND"/>

  <copyField source="id" dest="text"/>
  <copyField source="title" dest="text"/>
  <copyField source="title" dest="keyword"/>
  <copyField source="brand" dest="text"/>
  <!--<copyField source="leafcategoriesmountainbike" dest="text"/>-->
  <copyField source="year" dest="text"/>
  <!--<copyField source="nodecategoriesmountainbike" dest="text"/>-->
  <copyField source="size" dest="text"/>
  <copyField source="feature" dest="text"/>
  <copyField source="colorFamily" dest="text"/>
  <copyField source="brand" dest="sBrand"/>
  <copyField source="category" dest="categoryName"/>
  
  <copyField source="categoryNodes"  dest="text"/>
  <copyField source="categoryLeaves" dest="text"/>
  <copyField source="ha_*" dest="text"/>
</schema>
