<?xml version="1.0" encoding="UTF-8" ?>

<schema name="productCatalog" version="1.4">
  <types>
    <!-- A text field with defaults appropriate for English, plus
    aggressive word-splitting and autophrase features enabled.
    This field is just like text_en, except it adds
    WordDelimiterFilter to enable splitting and matching of
    words on case-change, alpha numeric boundaries, and
    non-alphanumeric chars.  This means certain compound word
    cases will work, for example query "wi fi" will match
    document "WiFi" or "wi-fi".  However, other cases will still
    not match, for example if the query is "wifi" and the
    document is "wi fi" or if the query is "wi-fi" and the
    document is "wifi".
    -->
    <fieldType name="text_en_splitting" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords_en.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <filter class="solr.PorterStemFilterFactory"/>
        <!-- attempt to expand synonyms after expansion -->
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms/index_synonyms.txt" ignoreCase="true" expand="true"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms/query_synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords_en.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
    </fieldType>
  </types>

  <xi:include href="xinclude/field_types.xml" parse="xml"
    xmlns:xi="http://www.w3.org/2001/XInclude">
  </xi:include>



  <fields>
   <!-- Valid attributes for fields:
     name: mandatory - the name for the field
     type: mandatory - the name of a previously defined type from the
       <types> section
     indexed: true if this field should be indexed (searchable or sortable)
     stored: true if this field should be retrievable
     multiValued: true if this field may contain multiple values per document
     omitNorms: (expert) set to true to omit the norms associated with
       this field (this disables length normalization and index-time
       boosting for the field, and saves some memory).  Only full-text
       fields or fields that need an index-time boost need norms.
     termVectors: [false] set to true to store the term vector for a
       given field.
       When using MoreLikeThis, fields used for similarity should be
       stored for best performance.
     termPositions: Store position information with the term vector.
       This will increase storage costs.
     termOffsets: Store offset information with the term vector. This
       will increase storage costs.
     default: a value that should be used if no value is specified
       when adding a document.
   -->
   <field name="_version_"         type="long"              indexed="true"  stored="true"                   multiValued="false" omitNorms="true" />
   <field name="id"                type="string"            indexed="true"  stored="true"  required="true"  multiValued="false" omitNorms="true" />
   <field name="productId"         type="string"            indexed="true"  stored="true"  required="true"  multiValued="false" omitNorms="true" />
   <field name="title"             type="string"            indexed="false" stored="true"  required="true"  multiValued="false" omitNorms="true" />
   <field name="feature"           type="string"            indexed="false" stored="true"  required="false" multiValued="true"  omitNorms="true" />
   <field name="category"          type="string"            indexed="true"  stored="true"  required="true"  multiValued="true"  omitNorms="true" />
   <field name="categoryId"        type="string"            indexed="true"  stored="true"  required="true"  multiValued="true"  omitNorms="true" />
   <field name="image"             type="string"            indexed="false" stored="true"  required="true"  multiValued="false" omitNorms="true" />
   <field name="brandId"           type="int"               indexed="true"  stored="true"  required="true"  multiValued="false" omitNorms="true" />
   <field name="seoUrl"            type="string"            indexed="false" stored="true"  required="true" multiValued="false" omitNorms="true" />
   <!-- boosting fields -->
   <field name="year"              type="tint"              indexed="true"  stored="true"  required="false" multiValued="false" omitNorms="false" />
   <field name="season"            type="string"            indexed="true"  stored="true"  required="false" multiValued="false" omitNorms="false" />
   <field name="listRank"          type="int"               indexed="true"  stored="true"  required="true"  multiValued="false" omitNorms="true" />
   <!-- facet fields -->
   <field name="brand"             type="string"            indexed="true"  stored="true"  required="false" multiValued="false" omitNorms="true" />
   <field name="gender"            type="string"            indexed="true"  stored="true"  required="false" multiValued="false" omitNorms="true" />
   <field name="scale"             type="string"            indexed="true"  stored="true"  required="false" multiValued="false" omitNorms="true" />
   <field name="size"              type="string"            indexed="true"  stored="true"  required="false" multiValued="false" omitNorms="true" />

   <!-- sorting/facet fields -->
   <field name="qoh"               type="int"               indexed="true"  stored="true"  required="fasle"  multiValued="false" omitNorms="false" />

   <field name="categoryName" type="categoryName" indexed="true" stored="false" multiValued="true" termVectors="true" />

    <xi:include href="xinclude/fields_en.xml" parse="xml"
      xmlns:xi="http://www.w3.org/2001/XInclude">
    </xi:include>

   <!-- catchall text field that indexes tokens both normally and in reverse for efficient
        leading wildcard queries. -->
   <field name="text_rev" type="text_general_rev" indexed="true" stored="false" multiValued="true"/>

   <field name="timestamp" type="tdate" indexed="true" stored="true" default="NOW" multiValued="false"/>

   <!-- dynamic facet fields -->
   <dynamicField name="colorFamily*"     type="string"  indexed="true" stored="true" required="false"  multiValued="true"  omitNorms="true"  />
   <dynamicField name="onsale*"          type="boolean" indexed="true" stored="true" required="false"  multiValued="false" omitNorms="true"  />
   <dynamicField name="reviewAverage*"   type="tfloat"  indexed="true" stored="true"  required="false" multiValued="false" omitNorms="false" />
   <dynamicField name="reviews*"         type="int"     indexed="true" stored="true"  required="fasle" multiValued="false" omitNorms="false" />
   <dynamicField name="freeGift*"        type="boolean" indexed="true" stored="true"  required="fasle" multiValued="false" omitNorms="false" />

   <!-- other sorting/facet fields -->
   <field name="listPrice"        type="tfloat"  indexed="true" stored="true" required="false" multiValued="false" omitNorms="true" />
   <field name="salePrice"        type="tfloat"  indexed="true" stored="true" required="false" multiValued="false" omitNorms="true" />
   <field name="discountPercent"  type="tint"    indexed="true" stored="true" required="false" multiValued="false" omitNorms="true" />
   <field name="isToos"           type="boolean" indexed="true" stored="true" required="true"  multiValued="false" omitNorms="true" sortMissingLast="true" />
   <field name="isPastSeason"     type="boolean" indexed="true" stored="true" required="false" multiValued="false" omitNorms="true" sortMissingLast="true" />

   <!-- catch all ignore -->
   <dynamicField name="*" type="ignored" multiValued="true" />


   <!-- XXXXX
   <field name="sku" type="text_en_splitting_tight" indexed="true" stored="true" omitNorms="true"/>
   <field name="name" type="text_general" indexed="true" stored="true"/>
   <field name="manu" type="text_general" indexed="true" stored="true" omitNorms="true"/>
   <field name="cat" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="features" type="text_general" indexed="true" stored="true" multiValued="true"/>
   <field name="includes" type="text_general" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true" />

   <field name="weight" type="float" indexed="true" stored="true"/>

   <field name="popularity" type="int" indexed="true" stored="true" />
   <field name="inStock" type="boolean" indexed="true" stored="true" />
   -->


  </fields>

  <!-- Field to use to determine and enforce document uniqueness.
      Unless this field is marked with required="false", it will be a required field
   -->
  <uniqueKey>id</uniqueKey>

  <!-- field for the QueryParser to use when an explicit fieldname is absent -->
  <!--<defaultSearchField>text</defaultSearchField>-->

  <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
  <solrQueryParser defaultOperator="AND"/>

  <copyField source="id" dest="text"/>
  <copyField source="title" dest="text"/>
  <copyField source="brand" dest="text"/>
  <!--<copyField source="leafcategoriesmountainbike" dest="text"/>-->
  <copyField source="year" dest="text"/>
  <!--<copyField source="nodecategoriesmountainbike" dest="text"/>-->
  <copyField source="size" dest="text"/>
  <copyField source="feature" dest="text"/>
  <copyField source="colorFamily" dest="text"/>
  <copyField source="brand" dest="sBrand"/>
  <copyField source="category" dest="categoryName"/>
</schema>
